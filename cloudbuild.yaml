# cloudbuild.yaml (FINAL - Fully Self-Contained)

steps:
  # This single step does everything to avoid external builder issues.
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Full Build, Infrastructure, and Deploy'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # --- PHASE 1: INSTALL ALL TOOLS ---
        echo "INFO: Installing all necessary tools..."
        apt-get update -y && apt-get install -y curl unzip

        # Install Terraform
        curl -o terraform.zip https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
        unzip terraform.zip
        mv terraform /usr/local/bin/

        # Install Node.js and Firebase Tools
        curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
        apt-get install -y nodejs
        npm install -g firebase-tools
        echo "INFO: All tools installed."

        # --- PHASE 2: PROVISION INFRASTRUCTURE ---
        echo "INFO: Running Terraform..."
        cd infrastructure
        terraform init
        terraform apply -auto-approve -var="gcp_project_id=${PROJECT_ID}"
        cd ..
        echo "INFO: Infrastructure provisioning complete."

        # --- PHASE 3: BUILD & DEPLOY BACKEND ---
        echo "INFO: Building and deploying backend..."
        gcloud builds submit --config=cloudbuild-backend.yaml --substitutions=_REGION=${_REGION},_AR_REPO_NAME=${_AR_REPO_NAME} .
        echo "INFO: Backend deployment complete."

        # --- PHASE 4: BUILD & DEPLOY FRONTEND ---
        echo "INFO: Building and deploying frontend..."
        cd frontend
        npm install
        npm run build
        firebase deploy --project=$PROJECT_ID --only=hosting --non-interactive
        echo "INFO: Firebase deployment complete."

# Use the powerful service account you created for all steps.
service_account: 'projects/hiringagent/serviceAccounts/hiring-ai@hiringagent.iam.gserviceaccount.com'

# Define substitutions
substitutions:
  _REGION: 'us-central1'
  _AR_REPO_NAME: 'ai-hiring-platform-backend'

options:
  logging: CLOUD_LOGGING_ONLY
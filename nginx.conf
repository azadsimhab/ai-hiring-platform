# nginx.conf
#
# This configuration is optimized for serving a Single-Page Application (SPA) like React.
# It is designed to be run inside a Docker container, for example, on Google Cloud Run.

# Sets the number of worker processes. For a small container, 1 is sufficient.
worker_processes 1;

# The `events` block is mandatory but can be left with defaults for this use case.
events {
    worker_connections 1024;
}

# The `http` block contains the main configuration for handling web traffic.
http {
    # Include the standard MIME types file to ensure browsers render files correctly.
    include /etc/nginx/mime.types;
    # Set a default MIME type for files that don't match any known type.
    default_type application/octet-stream;

    # --- Gzip Compression Settings ---
    # Enable gzip to reduce the size of text-based assets, speeding up load times.
    gzip on;
    gzip_vary on; # Adds a 'Vary: Accept-Encoding' header.
    gzip_proxied any; # Compress for all proxied requests.
    gzip_comp_level 6; # A good balance between compression level and CPU usage.
    gzip_min_length 1000; # Don't compress very small files.
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    # --- Server Block ---
    # This block defines the virtual server that will handle requests.
    server {
        # Listen on port 8080, the standard for Google Cloud Run and other container platforms.
        listen 8080;
        server_name localhost;

        # Set the root directory to where our built React app's files are located.
        # This path must match the destination in the frontend Dockerfile.
        root /usr/share/nginx/html;
        index index.html;

        # --- Caching Policy for Static Assets ---
        # Apply long-lived cache headers to static assets that are fingerprinted
        # by the build process (e.g., main.a1b2c3d4.js).
        location ~* \.(?:css|js|woff|woff2|ttf|ico|jpg|jpeg|png|gif|svg|mp4)$ {
            # Tell browsers and proxies to cache these files for one year.
            expires 1y;
            # Set the Cache-Control header to public to allow shared caches.
            add_header Cache-Control "public";
            # Disable access logging for these static files to reduce log noise.
            access_log off;
        }

        # --- Main Routing for the SPA ---
        # This is the most important part for a React application.
        location / {
            # This directive first tries to serve the requested URI as a file ($uri),
            # then as a directory ($uri/), and if neither exists, it falls back
            # to serving /index.html. This allows React Router to handle all routing.
            try_files $uri $uri/ /index.html;

            # --- Security Headers ---
            # Add headers to enhance the security of the application.
            # Prevents the site from being rendered in an iframe (clickjacking protection).
            add_header X-Frame-Options "SAMEORIGIN" always;
            # Enables the Cross-Site Scripting (XSS) filter in modern browsers.
            add_header X-XSS-Protection "1; mode=block" always;
            # Prevents the browser from interpreting files as a different MIME type.
            add_header X-Content-Type-Options "nosniff" always;
            # Prevents browsers from sending information along with cross-site requests.
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        }

        # --- Deny Access to Hidden Files ---
        # Add a location block to prevent clients from accessing hidden files
        # (e.g., .git, .env) that might be exposed by mistake.
        location ~ /\. {
            deny all;
        }
    }
}
